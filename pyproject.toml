[build-system]
requires = ["setuptools>=65.5", "pip>=22.3"]
build-backend = "setuptools.build_meta"

[project]
name = "invoke-training"
version = "0.0.1"
authors = [{ name = "The Invoke AI Team", email = "ryan@invoke.ai" }]
description = "A library for Stable Diffusion model training."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "Apache-2.0" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "accelerate~=0.29.2",
    "datasets~=2.14.3",
    "diffusers~=0.27.2",
    "einops",
    "fastapi",
    "gradio",
    "invokeai==4.2.3",
    "numpy",
    "omegaconf",
    "peft~=0.11.1",
    "Pillow",
    "prodigyopt",
    "pydantic",
    "pyyaml",
    "safetensors",
    "tensorboard",
    "torch>=2.1.2",
    "torchvision",
    "tqdm",
    "transformers~=4.39.0",
    "uvicorn[standard]",
]

[project.optional-dependencies]
"xformers" = ["xformers>=0.0.23; sys_platform!='darwin'"]
"bitsandbytes" = ["bitsandbytes>=0.43.1"]

"test" = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pre-commit~=3.3.3",
    "pytest~=7.4.0",
    # When bumping ruff, consider also bumping the ruff-pre-commit version in .pre-commit-config.yaml.
    "ruff~=0.1.7",
    "ruff-lsp",
]

[project.scripts]
"invoke-train" = "invoke_training.scripts.invoke_train:main"
"invoke-train-ui" = "invoke_training.scripts.invoke_train_ui:main"
"invoke-generate-images" = "invoke_training.scripts.invoke_generate_images:main"
"invoke-visualize-data-loading" = "invoke_training.scripts.invoke_visualize_data_loading:main"

[project.urls]
"Homepage" = "https://github.com/invoke-ai/invoke-training"
"Discord" = "https://discord.gg/ZmtBAhwWhy"

[tool.setuptools.package-data]
"invoke_training.assets" = ["*.png"]
"invoke_training.sample_configs" = ["**/*.yaml"]
"invoke_training.ui" = ["*.html"]

[tool.ruff]
src = ["src"]
select = ["E", "F", "W", "C9", "N8", "I"]
target-version = "py39"
line-length = 120

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "cuda: marks tests that require a CUDA GPU",
    "loads_model: marks tests that require a model (or data) from the HF hub",
]
